# Contenu du fichier ram_tribulle

# Instructions RAM pour le tri à bulles
# Avec comme entree un tableau d'entier, ecrire le tableau trié dans la sortie

# Initialisation des registres
2 0  # Instruction spéciale pour définir la taille du tableau à trier
ADD(i1,0,r1)  # Charger la taille du tableau dans un registre
ADD(1,0,r2)  # Initialiser un registre pour la boucle externe (i)
ADD(0,0,r3)  # Initialiser un registre pour la boucle interne (j)

# Boucle externe (i)
JE(r2,0,18)  # Vérifier si i < taille du tableau (saut à la sortie de la boucle)
    # Boucle interne (j)
    ADD(0,0,r3)  # Réinitialiser j à 0
    JE(r1,0,16)  # Vérifier si j < taille du tableau - i - 1 (saut à la fin de la boucle interne)
        # Comparer les éléments adjacents et les échanger si nécessaire
        ADD(1,r3,@r3)  # Charger l'élément actuel (tableau[j]) dans un registre
        ADD(1,@r3,r4)  # Charger l'élément suivant (tableau[j+1]) dans un registre
        JL(r4,r1,12)  # Vérifier si tableau[j+1] < tableau[j] (saut pour échanger)
            SWA(r3,@r3)  # Échanger les éléments (tableau[j] et tableau[j+1])
        ADD(1,r3,r3)  # Incrémenter j
        JMP(7)  # Saut au début de la boucle interne
    ADD(1,r2,r2)  # Incrémenter i
    JMP(3)  # Saut au début de la boucle externe

# Écrire le tableau trié dans la sortie
2 0  # Instruction spéciale pour définir la taille de la sortie
ADD(1,0,r1)  # Initialiser un registre pour la boucle d'écriture
ADD(0,0,r2)  # Initialiser un registre pour l'index du tableau
JMP(31)  # Saut au début de la boucle d'écriture
ADD(i1,@r2,o1)  # Écrire l'élément actuel du tableau trié dans la sortie
ADD(1,r2,r2)  # Incrémenter l'index du tableau
ADD(1,r1,r1)  # Incrémenter l'index de la sortie
JE(r1,0,38)  # Vérifier si l'écriture est terminée (saut à la sortie de la boucle)
JMP(31)  # Saut au début de la boucle d'écriture
